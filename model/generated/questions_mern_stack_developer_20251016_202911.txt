Topic: mern stack developer
Count: 8

Q1 [mcq]: Which of the following is NOT a core component of the MERN stack?
  1. MongoDB
  2. Express.js
  3. React
  4. Angular
Answer: 4

Q2 [one_word]: What type of database is MongoDB?
Answer: NoSQL

Q3 [mcq]: In React, which hook is primarily used for managing side effects in functional components?
  1. useState
  2. useContext
  3. useEffect
  4. useReducer
Answer: 3

Q4 [one_word]: What is the primary package manager used for Node.js?
Answer: npm

Q5 [mcq]: Which HTTP method is typically used to retrieve data from a server in a RESTful API?
  1. POST
  2. PUT
  3. GET
  4. DELETE
Answer: 3

Q6 [coding]: Write a simple React functional component that displays a counter and a button to increment it.
Starter code:
import React, { useState } from 'react'; function Counter() {
Answer: const [count, setCount] = useState(0); return (<div><p>Count: {count}</p><button onClick={() => setCount(count + 1)}>Increment</button></div>);}

Q7 [coding]: Write an Express.js route handler for a GET request to `/api/hello` that sends a JSON response `{ message: "Hello MERN!" }`.
Starter code:
const express = require('express'); const app = express(); app.get('/api/hello', (req, res) => {
Answer: res.json({ message: "Hello MERN!" }); });

Q8 [debug]: The following Node.js code attempts to log a message after 1 second, but `this.message` is undefined. Fix it.
Buggy code:
class Greeter { constructor() { this.message = "Hello"; } greet() { setTimeout(function() { console.log(this.message); }, 1000); } } const g = new Greeter(); g.greet();
Fix:
setTimeout(() => { console.log(this.message); }, 1000);
